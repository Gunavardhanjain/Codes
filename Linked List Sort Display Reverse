#include <stdio.h>
#include <stdlib.h>

struct node{
    int data;
    struct node *next;
}*head=NULL;



struct node* add(struct node *head, int data)
{
    struct node *newnode=(struct node*)malloc(sizeof(struct node));
    newnode->data=data;
    newnode->next=NULL;
    
    if(head==NULL)
    {
        head=newnode;
        return head;
    }
    else
    {
        struct node *temp=head;
        while(temp->next!=NULL)
        {
            temp=temp->next;
        }
        temp->next=newnode;
        return head;
    }
}



void display(struct node *head)
{
    if(head==NULL)
    {
        return;
    }
    else
    {
        struct node *temp=head;
        while(temp!=NULL)
        {
            printf("%d->",temp->data);
            temp=temp->next;
        }
    }
}




void reverse_display(struct node *head)
{
    //struct node *temp=head;
    if(head==NULL)
    {
        return;
    }
    else
    {
        reverse_display(head->next);
        printf("%d->",head->data);
    }
    
}



void sort_list(struct node *head)
{
    struct node *curr=head, *index;
    while(curr!=NULL)
    {
        index=curr->next;
        while(index!=NULL)
        {
            if(curr->data > index->data)
            {
                int temp=curr->data;
                curr->data=index->data;
                index->data=temp;
            }
            index=index->next;
        }
        curr=curr->next;
    }
}


int main() {
    
    head=add(head,2);
    head=add(head,5);
    head=add(head,1);
    head=add(head,10);
    head=add(head,8);
    
    printf("Normal Display\n");
    display(head);
    
    printf("\nReverse Display\n");
    reverse_display(head);
    
    sort_list(head);
    
    printf("\nAfter sorting\n");
    display(head);
    
    printf("\nReverse Display after sorting\n");
    reverse_display(head);
    
	return 0;
}
