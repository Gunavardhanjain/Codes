import math
#from collections import OrderedDict

def pronic(a):
    srt=int(math.sqrt(a));
    if(a==(srt*(srt+1))):
        return True
    else:
        return False


n=input()
prons=[]
global i
i=0
global flag


for i in range(0,len(n)):
    #print(i,"for i")
    if(pronic(int(n[i]))):
        #print("send i")
        prons.append(int(n[i]))
        
    if(n[i]!='0'):
        #print(i,"i!=0")
        for j in range(i+1,len(n)):
            #print(i,j,"for j")
            if(pronic(int(n[i:j+1]))):
                #print(i,j,"for j in pronic")
                prons.append(int(n[i:j+1]))
        flag=0
    
    else:
        ct=0
        k=i
        for k in range(i,len(n)):
            if(n[k]=='0'):
                ct+=1
            else:
                break
        #i=k-1
        rr=int( ( ct * (ct+1) ) / 2 )
        #print("rr=",rr)
        if(flag!=1):
            for l in range(0,rr-ct):
                #print("append 0")
                prons.append('0')
            flag=1
            #print("bye")
    

for i in prons:
    print(i,end=' ')
    #prev=prons[i]


